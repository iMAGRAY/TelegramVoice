import { useEffect, useRef, useState, useCallback } from 'react';
import SimplePeer from 'simple-peer';
import { v4 as uuidv4 } from 'uuid';
import { WebRTC–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ, –°–æ–æ–±—â–µ–Ω–∏–µ–í–µ–±–°–æ–∫–µ—Ç–∞ } from '@/types';
import { –ø–æ–ª—É—á–∏—Ç—å_ice_–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é, ice_–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ } from '@/config/iceServers';

interface UseWebRTCProps {
  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id: string;
  –∫–æ–º–Ω–∞—Ç–∞_id: string;
  socket: any;
  –Ω–∞_–ø–æ–ª—É—á–µ–Ω–∏–µ_–ø–æ—Ç–æ–∫–∞?: (–ø–æ—Ç–æ–∫: MediaStream, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id: string) => void;
  –Ω–∞_–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?: (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id: string) => void;
}

export const useWebRTC = ({
  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id,
  –∫–æ–º–Ω–∞—Ç–∞_id,
  socket,
  –Ω–∞_–ø–æ–ª—É—á–µ–Ω–∏–µ_–ø–æ—Ç–æ–∫–∞,
  –Ω–∞_–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
}: UseWebRTCProps) => {
  const [–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è, set–ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è] = useState<Map<string, WebRTC–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ>>(new Map());
  const [–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫, set–õ–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫] = useState<MediaStream | null>(null);
  const [–º–∏–∫—Ä–æ—Ñ–æ–Ω_–≤–∫–ª—é—á–µ–Ω, set–ú–∏–∫—Ä–æ—Ñ–æ–Ω_–≤–∫–ª—é—á–µ–Ω] = useState(true);
  const [–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, set–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è] = useState(false);
  const [–æ—à–∏–±–∫–∞, set–û—à–∏–±–∫–∞] = useState<string | null>(null);

  const –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref = useRef<MediaStream | null>(null);
  const –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è_ref = useRef<Map<string, WebRTC–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ>>(new Map());

  // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é ICE —Å–µ—Ä–≤–µ—Ä–æ–≤
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å TURN —Å–µ—Ä–≤–µ—Ä–∞–º–∏ –¥–ª—è –ª—É—á—à–µ–π —Å–≤—è–∑–Ω–æ—Å—Ç–∏
  const ice_config = –ø–æ–ª—É—á–∏—Ç—å_ice_–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é(true);

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∏–∫—Ä–æ—Ñ–æ–Ω—É
  const –ø–æ–ª—É—á–∏—Ç—å_–º–∏–∫—Ä–æ—Ñ–æ–Ω = useCallback(async () => {
    try {
      console.log(`[useWebRTC] üé§ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∏–∫—Ä–æ—Ñ–æ–Ω—É...`);
      set–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è(true);
      set–û—à–∏–±–∫–∞(null);

      const –ø–æ—Ç–æ–∫ = await navigator.mediaDevices.getUserMedia({
        audio: {
          echoCancellation: true,
          noiseSuppression: true,
          autoGainControl: true,
        },
        video: false
      });

      console.log(`[useWebRTC] ‚úÖ –ú–∏–∫—Ä–æ—Ñ–æ–Ω –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ:`, {
        —Ç—Ä–µ–∫–∏: –ø–æ—Ç–æ–∫.getTracks().length,
        –∞–∫—Ç–∏–≤–µ–Ω: –ø–æ—Ç–æ–∫.active,
        –¥–µ—Ç–∞–ª–∏_—Ç—Ä–µ–∫–æ–≤: –ø–æ—Ç–æ–∫.getTracks().map(t => ({
          –≤–∏–¥: t.kind,
          –≤–∫–ª—é—á–µ–Ω: t.enabled,
          –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: t.readyState,
          id: t.id
        }))
      });

      // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ç—Ä–µ–∫–æ–≤
      const –∞—É–¥–∏–æ_—Ç—Ä–µ–∫–∏ = –ø–æ—Ç–æ–∫.getAudioTracks();
      if (–∞—É–¥–∏–æ_—Ç—Ä–µ–∫–∏.length > 0) {
        // –í–∫–ª—é—á–∞–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞
        –∞—É–¥–∏–æ_—Ç—Ä–µ–∫–∏.forEach(—Ç—Ä–µ–∫ => {
          —Ç—Ä–µ–∫.enabled = true;
        });
        set–ú–∏–∫—Ä–æ—Ñ–æ–Ω_–≤–∫–ª—é—á–µ–Ω(true);
        console.log(`[useWebRTC] üîä –ú–∏–∫—Ä–æ—Ñ–æ–Ω –≤–∫–ª—é—á–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é`);
      }

      set–õ–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫(–ø–æ—Ç–æ–∫);
      –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current = –ø–æ—Ç–æ–∫;
      console.log(`[useWebRTC] üìù –õ–æ–∫–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ ref`);
      
      // –ö–†–ò–¢–ò–ß–ù–û: –£–≤–µ–¥–æ–º–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä –æ –≤–∫–ª—é—á–µ–Ω–∏–∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
      if (socket && socket.–ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å_–º–∏–∫—Ä–æ—Ñ–æ–Ω) {
        console.log(`[useWebRTC] üì° –£–≤–µ–¥–æ–º–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä –æ –≤–∫–ª—é—á–µ–Ω–∏–∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞`);
        socket.–ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å_–º–∏–∫—Ä–æ—Ñ–æ–Ω(true, –∫–æ–º–Ω–∞—Ç–∞_id);
      }
      
      return –ø–æ—Ç–æ–∫;
    } catch (error) {
      // –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∏–∫—Ä–æ—Ñ–æ–Ω—É
      
      if (error instanceof Error) {
        if (error.name === 'NotAllowedError') {
          set–û—à–∏–±–∫–∞('–î–æ—Å—Ç—É–ø –∫ –º–∏–∫—Ä–æ—Ñ–æ–Ω—É –∑–∞–ø—Ä–µ—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–∞.');
        } else if (error.name === 'NotFoundError') {
          set–û—à–∏–±–∫–∞('–ú–∏–∫—Ä–æ—Ñ–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω –∏ –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
        } else if (error.name === 'AbortError') {
          set–û—à–∏–±–∫–∞('–ó–∞–ø—Ä–æ—Å –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∏–∫—Ä–æ—Ñ–æ–Ω—É –±—ã–ª –ø—Ä–µ—Ä–≤–∞–Ω.');
        } else if (error.name === 'NotReadableError') {
          set–û—à–∏–±–∫–∞('–ú–∏–∫—Ä–æ—Ñ–æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º.');
        } else {
          set–û—à–∏–±–∫–∞(`–û—à–∏–±–∫–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞: ${error.message}`);
        }
      } else {
        set–û—à–∏–±–∫–∞('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –º–∏–∫—Ä–æ—Ñ–æ–Ω—É');
      }
      
      throw error;
    } finally {
      set–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è(false);
    }
  }, [–∫–æ–º–Ω–∞—Ç–∞_id, socket]);

  // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ peer —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
  const —Å–æ–∑–¥–∞—Ç—å_peer = useCallback((—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id: string, –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä: boolean = false) => {
    try {
      console.log(`[WebRTC] –°–æ–∑–¥–∞–Ω–∏–µ peer —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –¥–ª—è ${—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id}`, {
        –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä,
        –µ—Å—Ç—å_–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫: !!–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current,
        –∞—É–¥–∏–æ_—Ç—Ä–µ–∫–∏: –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current?.getAudioTracks().length || 0,
        —Ç—Ä–µ–∫–∏_–≤–∫–ª—é—á–µ–Ω—ã: –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current?.getAudioTracks().map(t => ({ id: t.id, enabled: t.enabled }))
      });
      
      // –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞
      if (!–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current) {
        console.error('[WebRTC] –û–®–ò–ë–ö–ê: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å peer —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –±–µ–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞!');
        return null;
      }
      
      // –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ª–æ–∫–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫ –∞–∫—Ç–∏–≤–µ–Ω
      const –ª–æ–∫–∞–ª—å–Ω—ã–µ_—Ç—Ä–µ–∫–∏ = –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current.getAudioTracks();
      console.log(`[WebRTC] –°–æ–∑–¥–∞–Ω–∏–µ peer —Å ${–ª–æ–∫–∞–ª—å–Ω—ã–µ_—Ç—Ä–µ–∫–∏.length} –∞—É–¥–∏–æ —Ç—Ä–µ–∫–∞–º–∏`);
      –ª–æ–∫–∞–ª—å–Ω—ã–µ_—Ç—Ä–µ–∫–∏.forEach((—Ç—Ä–µ–∫, –∏–Ω–¥–µ–∫—Å) => {
        console.log(`[WebRTC] –õ–æ–∫–∞–ª—å–Ω—ã–π —Ç—Ä–µ–∫ ${–∏–Ω–¥–µ–∫—Å}: enabled=${—Ç—Ä–µ–∫.enabled}, muted=${—Ç—Ä–µ–∫.muted}, readyState=${—Ç—Ä–µ–∫.readyState}`);
      });
      
      const peer = new SimplePeer({
        initiator: –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä,
        trickle: true, // –ö–†–ò–¢–ò–ß–ù–û: –≤–∫–ª—é—á–∞–µ–º trickle ICE –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        stream: –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current,
        config: ice_config,
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ —Å–≤—è–∑–∏
        offerOptions: {
          offerToReceiveAudio: true,
          offerToReceiveVideo: false
        },
        answerOptions: {
          offerToReceiveAudio: true,
          offerToReceiveVideo: false
        }
      });

      const –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: WebRTC–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ = {
        peer,
        –ø–æ—Ç–æ–∫: null,
        –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id: —É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id,
        –ø–æ–¥–∫–ª—é—á–µ–Ω: false
      };

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
      peer.on('signal', (—Å–∏–≥–Ω–∞–ª) => {
        console.log(`[WebRTC] –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ —Ç–∏–ø–∞ '${—Å–∏–≥–Ω–∞–ª.type}' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id}`);
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ WebRTC —Å–∏–≥–Ω–∞–ª–∞ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–¥–∞–ª–µ–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!
        socket?.–æ—Ç–ø—Ä–∞–≤–∏—Ç—å_webrtc_—Å–∏–≥–Ω–∞–ª(—Å–∏–≥–Ω–∞–ª, —É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id, –∫–æ–º–Ω–∞—Ç–∞_id);
      });

      // –ü–æ–ª—É—á–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞
      peer.on('stream', (—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ—Ç–æ–∫) => {
        console.log(`[WebRTC] –ü–æ–ª—É—á–µ–Ω —É–¥–∞–ª–µ–Ω–Ω—ã–π –ø–æ—Ç–æ–∫ –æ—Ç ${—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id}`, {
          —Ç—Ä–µ–∫–∏: —É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ—Ç–æ–∫.getTracks().map(t => ({ 
            –≤–∏–¥: t.kind, 
            –≤–∫–ª—é—á–µ–Ω: t.enabled,
            id: t.id,
            muted: t.muted,
            readyState: t.readyState
          }))
        });
        
        // –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞—É–¥–∏–æ —Ç—Ä–µ–∫–æ–≤
        const –∞—É–¥–∏–æ_—Ç—Ä–µ–∫–∏ = —É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ—Ç–æ–∫.getAudioTracks();
        if (–∞—É–¥–∏–æ_—Ç—Ä–µ–∫–∏.length === 0) {
          console.error(`[WebRTC] ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ü–æ–ª—É—á–µ–Ω –ø–æ—Ç–æ–∫ –±–µ–∑ –∞—É–¥–∏–æ —Ç—Ä–µ–∫–æ–≤ –æ—Ç ${—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id}`);
        } else {
          console.log(`[WebRTC] ‚úÖ –ê—É–¥–∏–æ —Ç—Ä–µ–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã: ${–∞—É–¥–∏–æ_—Ç—Ä–µ–∫–∏.length} —à—Ç.`);
        }
        
        –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.–ø–æ—Ç–æ–∫ = —É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ—Ç–æ–∫;
        –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.–ø–æ–¥–∫–ª—é—á–µ–Ω = true;
        
        set–ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è(prev => new Map(prev.set(—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ)));
        –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è_ref.current.set(—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ);
        
        –Ω–∞_–ø–æ–ª—É—á–µ–Ω–∏–µ_–ø–æ—Ç–æ–∫–∞?.(—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ—Ç–æ–∫, —É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id);
      });

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
      peer.on('connect', () => {
        console.log(`[WebRTC] ‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å ${—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id}`);
        –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.–ø–æ–¥–∫–ª—é—á–µ–Ω = true;
        
        // –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Ç–æ–∫–∞ –ø–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        const pc = (peer as any)._pc as RTCPeerConnection;
        if (pc) {
          console.log('[WebRTC] –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', {
            connectionState: pc.connectionState,
            iceConnectionState: pc.iceConnectionState,
            iceGatheringState: pc.iceGatheringState,
            signalingState: pc.signalingState,
            localStreams: pc.getSenders().map(s => ({
              track: s.track?.kind,
              enabled: s.track?.enabled,
              readyState: s.track?.readyState
            })),
            remoteStreams: pc.getReceivers().map(r => ({
              track: r.track?.kind,
              enabled: r.track?.enabled,
              readyState: r.track?.readyState
            }))
          });
        }
      });

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
      peer.on('close', () => {
        // WebRTC —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ
        —É–¥–∞–ª–∏—Ç—å_peer(—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id);
      });

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      peer.on('error', (error) => {
        console.error(`[WebRTC] –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å ${—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id}:`, error);
        —É–¥–∞–ª–∏—Ç—å_peer(—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id);
      });
      
      // –ö–†–ò–¢–ò–ß–ù–û: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ ICE —Å–æ—Å—Ç–æ—è–Ω–∏—è
      const pc = (peer as any)._pc as RTCPeerConnection;
      if (pc) {
        pc.addEventListener('iceconnectionstatechange', () => {
          console.log(`[WebRTC] ICE —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å ${—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id}: ${pc.iceConnectionState}`);
          
          if (pc.iceConnectionState === 'failed') {
            console.error(`[WebRTC] ‚ö†Ô∏è ICE —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å ${—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id}`);
          }
        });
        
        pc.addEventListener('icegatheringstatechange', () => {
          console.log(`[WebRTC] ICE gathering —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å ${—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id}: ${pc.iceGatheringState}`);
        });
        
        pc.addEventListener('connectionstatechange', () => {
          console.log(`[WebRTC] –û–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å ${—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id}: ${pc.connectionState}`);
        });
      }

      –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è_ref.current.set(—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ);
      set–ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è(prev => new Map(prev.set(—É–¥–∞–ª–µ–Ω–Ω—ã–π_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ)));

      return peer;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è peer —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', error);
      set–û—à–∏–±–∫–∞('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è');
      return null;
    }
  }, [–∫–æ–º–Ω–∞—Ç–∞_id, socket, –Ω–∞_–ø–æ–ª—É—á–µ–Ω–∏–µ_–ø–æ—Ç–æ–∫–∞]);

  // –£–¥–∞–ª–µ–Ω–∏–µ peer —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
  const —É–¥–∞–ª–∏—Ç—å_peer = useCallback((–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id: string) => {
    const –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ = –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è_ref.current.get(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id);
    
    if (–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ) {
      –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.peer.destroy();
      –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è_ref.current.delete(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id);
      set–ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è(prev => {
        const –Ω–æ–≤—ã–µ = new Map(prev);
        –Ω–æ–≤—ã–µ.delete(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id);
        return –Ω–æ–≤—ã–µ;
      });
      
      –Ω–∞_–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?.(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id);
    }
  }, [–Ω–∞_–æ—Ç–∫–ª—é—á–µ–Ω–∏–µ_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ WebRTC
  const –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å_—Å–∏–≥–Ω–∞–ª = useCallback((—Å–æ–æ–±—â–µ–Ω–∏–µ: any) => {
    console.log('[WebRTC] –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª:', —Å–æ–æ–±—â–µ–Ω–∏–µ);
    
    // –°–µ—Ä–≤–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–ª—è–º–∏: —Ç–∏–ø: 'webrtc-signal', –æ—Ç, –∫, –∫–æ–º–Ω–∞—Ç–∞, –¥–∞–Ω–Ω—ã–µ
    const { –æ—Ç, –¥–∞–Ω–Ω—ã–µ } = —Å–æ–æ–±—â–µ–Ω–∏–µ;
    
    if (!–æ—Ç || !–¥–∞–Ω–Ω—ã–µ) return;

    let –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ = –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è_ref.current.get(–æ—Ç);

    // SimplePeer –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–ª–µ–º type –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ —Å–∏–≥–Ω–∞–ª–∞
    const —Ç–∏–ø_—Å–∏–≥–Ω–∞–ª–∞ = –¥–∞–Ω–Ω—ã–µ.type || –¥–∞–Ω–Ω—ã–µ.candidate?.type;
    
    console.log(`[WebRTC] –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª —Ç–∏–ø–∞ '${—Ç–∏–ø_—Å–∏–≥–Ω–∞–ª–∞}' –æ—Ç ${–æ—Ç}`);
    
    if (—Ç–∏–ø_—Å–∏–≥–Ω–∞–ª–∞ === 'offer') {
      // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –ë–ï–ó —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
      if (!–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current) {
        console.error(`[WebRTC] ‚ùå –û–¢–ö–õ–û–ù–Å–ù offer –æ—Ç ${–æ—Ç} - –Ω–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ (–º–∏–∫—Ä–æ—Ñ–æ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω)`);
        // –ù–ï —Å–æ–∑–¥–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª - –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫–ª–æ–Ω—è–µ–º offer
        return;
      }
      
      if (!–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ) {
        console.log(`[WebRTC] –°–æ–∑–¥–∞–Ω–∏–µ peer —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${–æ—Ç}`);
        const peer = —Å–æ–∑–¥–∞—Ç—å_peer(–æ—Ç, false);
        if (!peer) {
          console.error(`[WebRTC] –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å peer –¥–ª—è ${–æ—Ç}`);
          return;
        }
        –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ = –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è_ref.current.get(–æ—Ç);
      }
      
      if (–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ) {
        console.log(`[WebRTC] –ü–µ—Ä–µ–¥–∞—á–∞ offer —Å–∏–≥–Ω–∞–ª–∞ peer —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—é —Å ${–æ—Ç}`);
        –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.peer.signal(–¥–∞–Ω–Ω—ã–µ);
      }
    } else if (–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ) {
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º answer –∏ candidate (trickle ICE)
      console.log(`[WebRTC] –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ ${—Ç–∏–ø_—Å–∏–≥–Ω–∞–ª–∞} –æ—Ç ${–æ—Ç}`);
      –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.peer.signal(–¥–∞–Ω–Ω—ã–µ);
    } else if (!–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ && —Ç–∏–ø_—Å–∏–≥–Ω–∞–ª–∞ !== 'offer') {
      console.warn(`[WebRTC] –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª ${—Ç–∏–ø_—Å–∏–≥–Ω–∞–ª–∞} –æ—Ç ${–æ—Ç}, –Ω–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
    }
  }, [—Å–æ–∑–¥–∞—Ç—å_peer]);

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  const –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è_–∫_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é = useCallback((–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id: string) => {
    console.log(`[useWebRTC] üîó –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id}`);
    
    // –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º
    console.log(`[useWebRTC] üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—Ä–µ–¥ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º:`, {
      –µ—Å—Ç—å_–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref: !!–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current,
      –µ—Å—Ç—å_–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_state: !!–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫,
      —Ç—Ä–µ–∫–∏_–≤_ref: –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current?.getTracks().length || 0,
      —Ç—Ä–µ–∫–∏_–≤_state: –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫?.getTracks().length || 0,
      –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å_ref: –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current?.active,
      –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å_state: –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫?.active,
      —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ_–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è_ref.current.has(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id)
    });
    
    if (!–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current) {
      console.error(`[WebRTC] ‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ ${–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id} –±–µ–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ - –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ`);
      return;
    }
    
    if (!–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è_ref.current.has(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id)) {
      console.log(`[useWebRTC] üöÄ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ peer —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å ${–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id}`);
      —Å–æ–∑–¥–∞—Ç—å_peer(–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id, true);
    } else {
      console.log(`[useWebRTC] ‚ÑπÔ∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ ${–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
    }
  }, [—Å–æ–∑–¥–∞—Ç—å_peer, –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫]);

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
  const –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å_–º–∏–∫—Ä–æ—Ñ–æ–Ω = useCallback(() => {
    if (–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current) {
      const –∞—É–¥–∏–æ_—Ç—Ä–µ–∫–∏ = –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current.getAudioTracks();
      
      // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –ø–æ—Ç–æ–º –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º
      const —Ç–µ–∫—É—â–µ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ = –∞—É–¥–∏–æ_—Ç—Ä–µ–∫–∏[0]?.enabled ?? false;
      const –Ω–æ–≤–æ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ = !—Ç–µ–∫—É—â–µ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ;
      
      –∞—É–¥–∏–æ_—Ç—Ä–µ–∫–∏.forEach(—Ç—Ä–µ–∫ => {
        —Ç—Ä–µ–∫.enabled = –Ω–æ–≤–æ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ;
      });
      
      set–ú–∏–∫—Ä–æ—Ñ–æ–Ω_–≤–∫–ª—é—á–µ–Ω(–Ω–æ–≤–æ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ);
      
      // –ú–∏–∫—Ä–æ—Ñ–æ–Ω –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω
      
      // –£–≤–µ–¥–æ–º–∏—Ç—å –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
      if (socket && socket.–ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å_–º–∏–∫—Ä–æ—Ñ–æ–Ω) {
        socket.–ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å_–º–∏–∫—Ä–æ—Ñ–æ–Ω(–Ω–æ–≤–æ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∫–æ–º–Ω–∞—Ç–∞_id);
      }
      
      return –Ω–æ–≤–æ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ;
    }
    
    // –ù–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞
    return false;
  }, [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id, –∫–æ–º–Ω–∞—Ç–∞_id, socket]);

  // –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
  const –æ—á–∏—Å—Ç–∏—Ç—å = useCallback(() => {
    console.log(`[useWebRTC] üßπ –û–ß–ò–°–¢–ö–ê –†–ï–°–£–†–°–û–í –ù–ê–ß–ê–¢–ê`);
    console.log(`[useWebRTC] üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—á–∏—Å—Ç–∫–æ–π:`, {
      –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è_ref.current.size,
      –µ—Å—Ç—å_–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref: !!–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current,
      –µ—Å—Ç—å_–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_state: !!–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫,
      —Ç—Ä–µ–∫–∏_–≤_–ø–æ—Ç–æ–∫–µ: –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current?.getTracks().length || 0
    });
    
    // –í—ã–≤–æ–¥–∏–º —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–∞ —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å –æ—Ç–∫—É–¥–∞ –∏–¥–µ—Ç –æ—á–∏—Å—Ç–∫–∞
    console.trace(`[useWebRTC] üìç –°–¢–ï–ö –í–´–ó–û–í–ê –û–ß–ò–°–¢–ö–ò:`);
    
    // –ó–∞–∫—Ä—ã—Ç—å –≤—Å–µ peer —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è_ref.current.forEach((–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ) => {
      console.log(`[useWebRTC] üîå –ó–∞–∫—Ä—ã–≤–∞–µ–º peer —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å ${–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_id}`);
      –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.peer.destroy();
    });
    –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è_ref.current.clear();
    set–ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è(new Map());
    console.log(`[useWebRTC] ‚úÖ –í—Å–µ peer —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∑–∞–∫—Ä—ã—Ç—ã`);

    // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫
    if (–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current) {
      console.log(`[useWebRTC] üé§ –û–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú –õ–û–ö–ê–õ–¨–ù–´–ô –ü–û–¢–û–ö`);
      –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current.getTracks().forEach((—Ç—Ä–µ–∫, –∏–Ω–¥–µ–∫—Å) => {
        console.log(`[useWebRTC] üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç—Ä–µ–∫ ${–∏–Ω–¥–µ–∫—Å}: ${—Ç—Ä–µ–∫.kind} (${—Ç—Ä–µ–∫.id})`);
        —Ç—Ä–µ–∫.stop();
      });
      –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current = null;
      set–õ–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫(null);
      console.log(`[useWebRTC] ‚ùå –õ–û–ö–ê–õ–¨–ù–´–ô –ü–û–¢–û–ö –û–ß–ò–©–ï–ù`);
    } else {
      console.log(`[useWebRTC] ‚ÑπÔ∏è –õ–æ–∫–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫ —É–∂–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
    }
    
    console.log(`[useWebRTC] üèÅ –û–ß–ò–°–¢–ö–ê –†–ï–°–£–†–°–û–í –ó–ê–í–ï–†–®–ï–ù–ê`);
  }, [–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫]);

  // –ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
  const –ø–æ–ª—É—á–∏—Ç—å_–∞–∫—Ç–∏–≤–Ω—ã–µ_—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è = useCallback(() => {
    return Array.from(–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è_ref.current.values()).filter(conn => conn.–ø–æ–¥–∫–ª—é—á–µ–Ω);
  }, []);

  // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ —Å —Ç—Ä–µ–∫–∞–º–∏
  const —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å_—Å–æ—Å—Ç–æ—è–Ω–∏–µ_–º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ = useCallback(() => {
    if (–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current) {
      const –∞—É–¥–∏–æ_—Ç—Ä–µ–∫–∏ = –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current.getAudioTracks();
      if (–∞—É–¥–∏–æ_—Ç—Ä–µ–∫–∏.length > 0) {
        const —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ = –∞—É–¥–∏–æ_—Ç—Ä–µ–∫–∏[0].enabled;
        if (—Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ !== –º–∏–∫—Ä–æ—Ñ–æ–Ω_–≤–∫–ª—é—á–µ–Ω) {
          // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
          set–ú–∏–∫—Ä–æ—Ñ–æ–Ω_–≤–∫–ª—é—á–µ–Ω(—Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ);
          
          // –£–≤–µ–¥–æ–º–∏—Ç—å –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ —Ä–µ–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
          if (socket && socket.–ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å_–º–∏–∫—Ä–æ—Ñ–æ–Ω) {
            socket.–ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å_–º–∏–∫—Ä–æ—Ñ–æ–Ω(—Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∫–æ–º–Ω–∞—Ç–∞_id);
          }
        }
      }
    }
  }, [–º–∏–∫—Ä–æ—Ñ–æ–Ω_–≤–∫–ª—é—á–µ–Ω, –∫–æ–º–Ω–∞—Ç–∞_id, socket]);

  useEffect(() => {
    if (socket && socket.–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è) {
      const unsubscribe = socket.–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è('webrtc-signal', –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å_—Å–∏–≥–Ω–∞–ª);
      
      return () => {
        unsubscribe();
      };
    }
  }, [socket, –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å_—Å–∏–≥–Ω–∞–ª]);

  // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –ë–ï–ó –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    console.log(`[useWebRTC] üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞:`, {
      –µ—Å—Ç—å_–ø–æ—Ç–æ–∫: !!–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫,
      —Ç—Ä–µ–∫–∏: –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫?.getTracks().length || 0,
      –∞–∫—Ç–∏–≤–µ–Ω: –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫?.active,
      ref_—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω: –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫_ref.current === –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫
    });
    
    if (!–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫) {
      console.warn(`[useWebRTC] ‚ö†Ô∏è –õ–æ–∫–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫ —Å—Ç–∞–ª null/undefined!`);
    }
    
    // –ö–†–ò–¢–ò–ß–ù–û: –ù–ï –í–´–ó–´–í–ê–ï–ú –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–£–Æ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Æ - —ç—Ç–æ –ø—Ä–∏—á–∏–Ω–∞ —Ü–∏–∫–ª–∞!
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –≤—Ä—É—á–Ω—É—é –∏–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ
  }, [–ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫]);

  // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    console.log(`[useWebRTC] üé¨ useWebRTC —Ö—É–∫ –ú–û–ù–¢–ò–†–£–ï–¢–°–Ø`);
    
    return () => {
      console.log(`[useWebRTC] üé¨ useWebRTC —Ö—É–∫ –†–ê–ó–ú–û–ù–¢–ò–†–£–ï–¢–°–Ø - –≤—ã–∑—ã–≤–∞–µ–º –æ—á–∏—Å—Ç–∫—É`);
      –æ—á–∏—Å—Ç–∏—Ç—å();
    };
  }, [–æ—á–∏—Å—Ç–∏—Ç—å]);

  return {
    –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: Array.from(–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.values()),
    –ª–æ–∫–∞–ª—å–Ω—ã–π_–ø–æ—Ç–æ–∫,
    –º–∏–∫—Ä–æ—Ñ–æ–Ω_–≤–∫–ª—é—á–µ–Ω,
    –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è,
    –æ—à–∏–±–∫–∞,
    –ø–æ–ª—É—á–∏—Ç—å_–º–∏–∫—Ä–æ—Ñ–æ–Ω,
    –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è_–∫_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é,
    –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å_–º–∏–∫—Ä–æ—Ñ–æ–Ω,
    —É–¥–∞–ª–∏—Ç—å_peer,
    –æ—á–∏—Å—Ç–∏—Ç—å,
    –ø–æ–ª—É—á–∏—Ç—å_–∞–∫—Ç–∏–≤–Ω—ã–µ_—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è,
    —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å_—Å–æ—Å—Ç–æ—è–Ω–∏–µ_–º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
  };
};