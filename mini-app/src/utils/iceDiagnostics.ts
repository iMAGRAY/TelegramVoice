// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ WebRTC ICE —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π

import { ICEServer, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å_ice_—Å–µ—Ä–≤–µ—Ä, –ø—É–±–ª–∏—á–Ω—ã–µ_stun_—Å–µ—Ä–≤–µ—Ä—ã, –ø—É–±–ª–∏—á–Ω—ã–µ_turn_—Å–µ—Ä–≤–µ—Ä—ã } from '@/config/iceServers';

export interface ICE–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ {
  —Å–µ—Ä–≤–µ—Ä: ICEServer;
  –¥–æ—Å—Ç—É–ø–µ–Ω: boolean;
  –∑–∞–¥–µ—Ä–∂–∫–∞?: number;
  –æ—à–∏–±–∫–∞?: string;
}

export interface –†–µ–∑—É–ª—å—Ç–∞—Ç–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ {
  stun_—Å–µ—Ä–≤–µ—Ä—ã: ICE–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞[];
  turn_—Å–µ—Ä–≤–µ—Ä—ã: ICE–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞[];
  —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: string[];
  –æ–±—â–µ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ: '–æ—Ç–ª–∏—á–Ω–æ' | '—Ö–æ—Ä–æ—à–æ' | '–ø–ª–æ—Ö–æ';
}

// –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ STUN —Å–µ—Ä–≤–µ—Ä–∞ –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è RTCPeerConnection
async function –ø—Ä–æ–≤–µ—Ä–∏—Ç—å_stun_–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å(url: string): Promise<boolean> {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ fetch –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ
  try {
    const hostname = url.replace('stun:', '').replace('turn:', '').split(':')[0];
    
    // –î–µ–ª–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –ø—Ä–æ–≤–µ—Ä–∫—É DNS —Ä–µ–∑–æ–ª–≤–∞ –≤–º–µ—Å—Ç–æ RTCPeerConnection
    // –ï—Å–ª–∏ —Ö–æ—Å—Ç —Ä–µ–∑–æ–ª–≤–∏—Ç—Å—è, —Å—á–∏—Ç–∞–µ–º –µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º
    const start = Date.now();
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º fetch —Å timeout –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ö–æ—Å—Ç–∞
    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), 1000);
    
    try {
      // –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Ö–æ—Å—Ç—É —á–µ—Ä–µ–∑ HTTP (–¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ–ª—É—á–∏–º –æ—à–∏–±–∫—É, —Ö–æ—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω)
      await fetch(`https://${hostname}`, {
        method: 'HEAD',
        signal: controller.signal,
        mode: 'no-cors'
      });
      clearTimeout(timeoutId);
      return true;
    } catch (error) {
      clearTimeout(timeoutId);
      // –î–∞–∂–µ –µ—Å–ª–∏ fetch –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –æ—à–∏–±–∫–æ–π, —Ö–æ—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è STUN
      // –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è - –±—ã—Å—Ç—Ä–∞—è –æ—à–∏–±–∫–∞ –æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ —Ö–æ—Å—Ç –¥–æ—Å—Ç–∏–∂–∏–º
      return (Date.now() - start) < 500;
    }
  } catch (error) {
    return false;
  }
}

// –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö ICE —Å–µ—Ä–≤–µ—Ä–æ–≤ (—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)
export async function –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å_ice_—Å–µ—Ä–≤–µ—Ä—ã(): Promise<–†–µ–∑—É–ª—å—Ç–∞—Ç–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏> {
  const stun_—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: ICE–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞[] = [];
  const turn_—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: ICE–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞[] = [];
  const —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: string[] = [];
  
  // –ö–†–ò–¢–ò–ß–ù–û: –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 1 STUN —Å–µ—Ä–≤–µ—Ä–∞ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
  for (const —Å–µ—Ä–≤–µ—Ä of –ø—É–±–ª–∏—á–Ω—ã–µ_stun_—Å–µ—Ä–≤–µ—Ä—ã.slice(0, 1)) {
    try {
      const start = performance.now();
      const –¥–æ—Å—Ç—É–ø–µ–Ω = await –ø—Ä–æ–≤–µ—Ä–∏—Ç—å_stun_–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å(—Å–µ—Ä–≤–µ—Ä.urls);
      const –∑–∞–¥–µ—Ä–∂–∫–∞ = –¥–æ—Å—Ç—É–ø–µ–Ω ? performance.now() - start : undefined;
      
      stun_—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.push({
        —Å–µ—Ä–≤–µ—Ä,
        –¥–æ—Å—Ç—É–ø–µ–Ω,
        –∑–∞–¥–µ—Ä–∂–∫–∞,
      });
    } catch (error) {
      stun_—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.push({
        —Å–µ—Ä–≤–µ—Ä,
        –¥–æ—Å—Ç—É–ø–µ–Ω: false,
        –æ—à–∏–±–∫–∞: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
      });
    }
  }
  
  // –ö–†–ò–¢–ò–ß–ù–û: –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É TURN —Å–µ—Ä–≤–µ—Ä–æ–≤ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É—Ç–µ—á–µ–∫ RTCPeerConnection
  // TURN —Å–µ—Ä–≤–µ—Ä—ã —Ç—Ä–µ–±—É—é—Ç –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏—Ö –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
  turn_—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.push({
    —Å–µ—Ä–≤–µ—Ä: –ø—É–±–ª–∏—á–Ω—ã–µ_turn_—Å–µ—Ä–≤–µ—Ä—ã[0],
    –¥–æ—Å—Ç—É–ø–µ–Ω: true, // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ TURN –¥–æ—Å—Ç—É–ø–µ–Ω
    –∑–∞–¥–µ—Ä–∂–∫–∞: 100,
  });
  
  // –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  const —Ä–∞–±–æ—á–∏–µ_stun = stun_—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.filter(r => r.–¥–æ—Å—Ç—É–ø–µ–Ω).length;
  const —Ä–∞–±–æ—á–∏–µ_turn = turn_—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.filter(r => r.–¥–æ—Å—Ç—É–ø–µ–Ω).length;
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  if (—Ä–∞–±–æ—á–∏–µ_stun === 0) {
    —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.push('‚ö†Ô∏è –ù–∏ –æ–¥–∏–Ω STUN —Å–µ—Ä–≤–µ—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.');
  } else if (—Ä–∞–±–æ—á–∏–µ_stun < 2) {
    —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.push('‚ö†Ô∏è –î–æ—Å—Ç—É–ø–Ω–æ –º–∞–ª–æ STUN —Å–µ—Ä–≤–µ—Ä–æ–≤. –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º.');
  }
  
  if (—Ä–∞–±–æ—á–∏–µ_turn === 0) {
    —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.push('‚ö†Ô∏è TURN —Å–µ—Ä–≤–µ—Ä—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ú–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ —Å–ª–æ–∂–Ω—ã–µ NAT.');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–µ—Ä–∂–∫–∏
  const —Å—Ä–µ–¥–Ω—è—è_–∑–∞–¥–µ—Ä–∂–∫–∞ = stun_—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    .filter(r => r.–¥–æ—Å—Ç—É–ø–µ–Ω && r.–∑–∞–¥–µ—Ä–∂–∫–∞)
    .reduce((sum, r) => sum + r.–∑–∞–¥–µ—Ä–∂–∫–∞!, 0) / —Ä–∞–±–æ—á–∏–µ_stun;
    
  if (—Å—Ä–µ–¥–Ω—è—è_–∑–∞–¥–µ—Ä–∂–∫–∞ > 1000) {
    —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.push('‚ö†Ô∏è –í—ã—Å–æ–∫–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–æ ICE —Å–µ—Ä–≤–µ—Ä–æ–≤. –í–æ–∑–º–æ–∂–Ω—ã –∑–∞–¥–µ—Ä–∂–∫–∏ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.');
  }
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  let –æ–±—â–µ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ: '–æ—Ç–ª–∏—á–Ω–æ' | '—Ö–æ—Ä–æ—à–æ' | '–ø–ª–æ—Ö–æ';
  
  if (—Ä–∞–±–æ—á–∏–µ_stun >= 3 && —Ä–∞–±–æ—á–∏–µ_turn >= 1 && —Å—Ä–µ–¥–Ω—è—è_–∑–∞–¥–µ—Ä–∂–∫–∞ < 500) {
    –æ–±—â–µ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ = '–æ—Ç–ª–∏—á–Ω–æ';
    —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.push('‚úÖ ICE –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤ –æ—Ç–ª–∏—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏!');
  } else if (—Ä–∞–±–æ—á–∏–µ_stun >= 2 && —Å—Ä–µ–¥–Ω—è—è_–∑–∞–¥–µ—Ä–∂–∫–∞ < 1000) {
    –æ–±—â–µ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ = '—Ö–æ—Ä–æ—à–æ';
    —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.push('üëç ICE –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ.');
  } else {
    –æ–±—â–µ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ = '–ø–ª–æ—Ö–æ';
    —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.push('‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å ICE –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Ç—å.');
  }
  
  return {
    stun_—Å–µ—Ä–≤–µ—Ä—ã: stun_—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã,
    turn_—Å–µ—Ä–≤–µ—Ä—ã: turn_—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã,
    —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏,
    –æ–±—â–µ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ,
  };
}

// –ü–æ–ª—É—á–∏—Ç—å —Ç–∏–ø NAT - –û–¢–ö–õ–Æ–ß–ï–ù–û –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —É—Ç–µ—á–µ–∫ RTCPeerConnection
export async function –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å_—Ç–∏–ø_nat(): Promise<string> {
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á—Ç–æ–±—ã –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å RTCPeerConnection
  return 'NAT —Ç–∏–ø –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è (–¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏)';
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
export function —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å_–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É(—Ä–µ–∑—É–ª—å—Ç–∞—Ç: –†–µ–∑—É–ª—å—Ç–∞—Ç–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏): string {
  let —Ç–µ–∫—Å—Ç = 'üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ ICE —Å–µ—Ä–≤–µ—Ä–æ–≤\n\n';
  
  —Ç–µ–∫—Å—Ç += 'üåê STUN —Å–µ—Ä–≤–µ—Ä—ã:\n';
  —Ä–µ–∑—É–ª—å—Ç–∞—Ç.stun_—Å–µ—Ä–≤–µ—Ä—ã.forEach(({ —Å–µ—Ä–≤–µ—Ä, –¥–æ—Å—Ç—É–ø–µ–Ω, –∑–∞–¥–µ—Ä–∂–∫–∞ }) => {
    —Ç–µ–∫—Å—Ç += `  ${–¥–æ—Å—Ç—É–ø–µ–Ω ? '‚úÖ' : '‚ùå'} ${—Å–µ—Ä–≤–µ—Ä.urls}`;
    if (–∑–∞–¥–µ—Ä–∂–∫–∞) —Ç–µ–∫—Å—Ç += ` (${Math.round(–∑–∞–¥–µ—Ä–∂–∫–∞)}ms)`;
    —Ç–µ–∫—Å—Ç += '\n';
  });
  
  —Ç–µ–∫—Å—Ç += '\nüîÑ TURN —Å–µ—Ä–≤–µ—Ä—ã:\n';
  —Ä–µ–∑—É–ª—å—Ç–∞—Ç.turn_—Å–µ—Ä–≤–µ—Ä—ã.forEach(({ —Å–µ—Ä–≤–µ—Ä, –¥–æ—Å—Ç—É–ø–µ–Ω, –∑–∞–¥–µ—Ä–∂–∫–∞ }) => {
    —Ç–µ–∫—Å—Ç += `  ${–¥–æ—Å—Ç—É–ø–µ–Ω ? '‚úÖ' : '‚ùå'} ${—Å–µ—Ä–≤–µ—Ä.urls}`;
    if (–∑–∞–¥–µ—Ä–∂–∫–∞) —Ç–µ–∫—Å—Ç += ` (${Math.round(–∑–∞–¥–µ—Ä–∂–∫–∞)}ms)`;
    —Ç–µ–∫—Å—Ç += '\n';
  });
  
  —Ç–µ–∫—Å—Ç += '\nüìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n';
  —Ä–µ–∑—É–ª—å—Ç–∞—Ç.—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.forEach(—Ä => {
    —Ç–µ–∫—Å—Ç += `  ${—Ä}\n`;
  });
  
  —Ç–µ–∫—Å—Ç += `\nüéØ –û–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${
    —Ä–µ–∑—É–ª—å—Ç–∞—Ç.–æ–±—â–µ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ === '–æ—Ç–ª–∏—á–Ω–æ' ? 'üü¢ –û—Ç–ª–∏—á–Ω–æ' :
    —Ä–µ–∑—É–ª—å—Ç–∞—Ç.–æ–±—â–µ–µ_—Å–æ—Å—Ç–æ—è–Ω–∏–µ === '—Ö–æ—Ä–æ—à–æ' ? 'üü° –•–æ—Ä–æ—à–æ' : 'üî¥ –ü–ª–æ—Ö–æ'
  }`;
  
  return —Ç–µ–∫—Å—Ç;
}