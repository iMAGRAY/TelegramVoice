'use client';

import React, { useState, useEffect, useRef } from 'react';
import { X, Copy, Trash2, Download } from 'lucide-react';

interface LogEntry {
  timestamp: number;
  level: 'info' | 'warn' | 'error';
  message: string;
  data?: any;
}

interface DebugModalProps {
  –æ—Ç–∫—Ä—ã—Ç: boolean;
  –Ω–∞_–∑–∞–∫—Ä—ã—Ç—å: () => void;
}

export const DebugModal: React.FC<DebugModalProps> = ({ –æ—Ç–∫—Ä—ã—Ç, –Ω–∞_–∑–∞–∫—Ä—ã—Ç—å }) => {
  const [–ª–æ–≥–∏, set–õ–æ–≥–∏] = useState<LogEntry[]>([]);
  const [–∞–≤—Ç–æ_—Å–∫—Ä–æ–ª–ª, set–ê–≤—Ç–æ_—Å–∫—Ä–æ–ª–ª] = useState(true);
  const –ª–æ–≥–∏_–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä_ref = useRef<HTMLDivElement>(null);
  const –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π_console_ref = useRef<{
    log: typeof console.log;
    warn: typeof console.warn;
    error: typeof console.error;
  }>();

  // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º console –º–µ—Ç–æ–¥—ã
  useEffect(() => {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    if (!–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π_console_ref.current) {
      –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π_console_ref.current = {
        log: console.log,
        warn: console.warn,
        error: console.error
      };
    }

    const –¥–æ–±–∞–≤–∏—Ç—å_–ª–æ–≥ = (level: LogEntry['level'], args: any[]) => {
      const message = args
        .map(arg => typeof arg === 'object' ? JSON.stringify(arg, null, 2) : String(arg))
        .join(' ');
      
      const –Ω–æ–≤—ã–π_–ª–æ–≥: LogEntry = {
        timestamp: Date.now(),
        level,
        message,
        data: args.length === 1 && typeof args[0] === 'object' ? args[0] : undefined
      };

      set–õ–æ–≥–∏(prev => [...prev.slice(-999), –Ω–æ–≤—ã–π_–ª–æ–≥]); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 1000 –∑–∞–ø–∏—Å–µ–π
    };

    // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º console –º–µ—Ç–æ–¥—ã
    console.log = (...args) => {
      –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π_console_ref.current!.log(...args);
      –¥–æ–±–∞–≤–∏—Ç—å_–ª–æ–≥('info', args);
    };

    console.warn = (...args) => {
      –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π_console_ref.current!.warn(...args);
      –¥–æ–±–∞–≤–∏—Ç—å_–ª–æ–≥('warn', args);
    };

    console.error = (...args) => {
      –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π_console_ref.current!.error(...args);
      –¥–æ–±–∞–≤–∏—Ç—å_–ª–æ–≥('error', args);
    };

    return () => {
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
      if (–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π_console_ref.current) {
        console.log = –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π_console_ref.current.log;
        console.warn = –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π_console_ref.current.warn;
        console.error = –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π_console_ref.current.error;
      }
    };
  }, []);

  // –ê–≤—Ç–æ-—Å–∫—Ä–æ–ª–ª –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö –ª–æ–≥–æ–≤
  useEffect(() => {
    if (–∞–≤—Ç–æ_—Å–∫—Ä–æ–ª–ª && –ª–æ–≥–∏_–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä_ref.current) {
      –ª–æ–≥–∏_–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä_ref.current.scrollTop = –ª–æ–≥–∏_–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä_ref.current.scrollHeight;
    }
  }, [–ª–æ–≥–∏, –∞–≤—Ç–æ_—Å–∫—Ä–æ–ª–ª]);

  const —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å_–ª–æ–≥–∏ = async () => {
    const —Ç–µ–∫—Å—Ç_–ª–æ–≥–æ–≤ = –ª–æ–≥–∏
      .map(–ª–æ–≥ => `[${new Date(–ª–æ–≥.timestamp).toLocaleTimeString()}] ${–ª–æ–≥.level.toUpperCase()}: ${–ª–æ–≥.message}`)
      .join('\n');
    
    try {
      await navigator.clipboard.writeText(—Ç–µ–∫—Å—Ç_–ª–æ–≥–æ–≤);
      console.log('–õ–æ–≥–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–æ–≤:', error);
    }
  };

  const —Å–∫–∞—á–∞—Ç—å_–ª–æ–≥–∏ = () => {
    const —Ç–µ–∫—Å—Ç_–ª–æ–≥–æ–≤ = –ª–æ–≥–∏
      .map(–ª–æ–≥ => `[${new Date(–ª–æ–≥.timestamp).toISOString()}] ${–ª–æ–≥.level.toUpperCase()}: ${–ª–æ–≥.message}`)
      .join('\n');
    
    const blob = new Blob([—Ç–µ–∫—Å—Ç_–ª–æ–≥–æ–≤], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `telegram-voice-logs-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  const –æ—á–∏—Å—Ç–∏—Ç—å_–ª–æ–≥–∏ = () => {
    set–õ–æ–≥–∏([]);
  };

  const –ø–æ–ª—É—á–∏—Ç—å_—Ü–≤–µ—Ç_—É—Ä–æ–≤–Ω—è = (level: LogEntry['level']) => {
    switch (level) {
      case 'error':
        return 'text-red-400';
      case 'warn':
        return 'text-yellow-400';
      default:
        return 'text-gray-300';
    }
  };

  const –ø–æ–ª—É—á–∏—Ç—å_—Ñ–æ–Ω_—É—Ä–æ–≤–Ω—è = (level: LogEntry['level']) => {
    switch (level) {
      case 'error':
        return 'bg-red-900/20';
      case 'warn':
        return 'bg-yellow-900/20';
      default:
        return '';
    }
  };

  if (!–æ—Ç–∫—Ä—ã—Ç) return null;

  return (
    <div className="fixed inset-0 bg-black/80 flex items-center justify-center z-50 p-4">
      <div className="bg-gray-900 rounded-lg shadow-2xl w-full max-w-4xl max-h-[90vh] flex flex-col">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="flex items-center justify-between p-4 border-b border-gray-700">
          <div className="flex items-center gap-3">
            <h2 className="text-xl font-semibold text-white">üêõ Debug Console</h2>
            <div className="text-sm text-gray-400">
              {–ª–æ–≥–∏.length} –∑–∞–ø–∏—Å–µ–π
            </div>
          </div>
          <div className="flex items-center gap-2">
            <label className="flex items-center gap-2 text-sm text-gray-300">
              <input
                type="checkbox"
                checked={–∞–≤—Ç–æ_—Å–∫—Ä–æ–ª–ª}
                onChange={(e) => set–ê–≤—Ç–æ_—Å–∫—Ä–æ–ª–ª(e.target.checked)}
                className="rounded"
              />
              –ê–≤—Ç–æ-—Å–∫—Ä–æ–ª–ª
            </label>
            <button
              onClick={—Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å_–ª–æ–≥–∏}
              className="p-2 hover:bg-gray-700 rounded text-gray-300 hover:text-white transition-colors"
              title="–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ª–æ–≥–∏"
            >
              <Copy className="w-4 h-4" />
            </button>
            <button
              onClick={—Å–∫–∞—á–∞—Ç—å_–ª–æ–≥–∏}
              className="p-2 hover:bg-gray-700 rounded text-gray-300 hover:text-white transition-colors"
              title="–°–∫–∞—á–∞—Ç—å –ª–æ–≥–∏"
            >
              <Download className="w-4 h-4" />
            </button>
            <button
              onClick={–æ—á–∏—Å—Ç–∏—Ç—å_–ª–æ–≥–∏}
              className="p-2 hover:bg-gray-700 rounded text-gray-300 hover:text-white transition-colors"
              title="–û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏"
            >
              <Trash2 className="w-4 h-4" />
            </button>
            <button
              onClick={–Ω–∞_–∑–∞–∫—Ä—ã—Ç—å}
              className="p-2 hover:bg-gray-700 rounded text-gray-300 hover:text-white transition-colors"
            >
              <X className="w-5 h-5" />
            </button>
          </div>
        </div>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç –ª–æ–≥–æ–≤ */}
        <div 
          ref={–ª–æ–≥–∏_–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä_ref}
          className="flex-1 overflow-auto p-4 font-mono text-sm bg-black"
          style={{ maxHeight: 'calc(90vh - 120px)' }}
        >
          {–ª–æ–≥–∏.length === 0 ? (
            <div className="text-gray-500 text-center py-8">
              –õ–æ–≥–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å...
            </div>
          ) : (
            <div className="space-y-1">
              {–ª–æ–≥–∏.map((–ª–æ–≥, index) => (
                <div 
                  key={index} 
                  className={`p-2 rounded text-xs ${–ø–æ–ª—É—á–∏—Ç—å_—Ñ–æ–Ω_—É—Ä–æ–≤–Ω—è(–ª–æ–≥.level)}`}
                >
                  <div className="flex items-start gap-2">
                    <span className="text-gray-500 shrink-0">
                      {new Date(–ª–æ–≥.timestamp).toLocaleTimeString()}
                    </span>
                    <span className={`font-bold shrink-0 ${–ø–æ–ª—É—á–∏—Ç—å_—Ü–≤–µ—Ç_—É—Ä–æ–≤–Ω—è(–ª–æ–≥.level)}`}>
                      [{–ª–æ–≥.level.toUpperCase()}]
                    </span>
                    <span className={–ø–æ–ª—É—á–∏—Ç—å_—Ü–≤–µ—Ç_—É—Ä–æ–≤–Ω—è(–ª–æ–≥.level)} style={{ wordBreak: 'break-word' }}>
                      {–ª–æ–≥.message}
                    </span>
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>

        {/* –§—É—Ç–µ—Ä —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π */}
        <div className="p-3 border-t border-gray-700 text-xs text-gray-400 bg-gray-800">
          <div className="flex items-center justify-between">
            <div>
              –ù–∞–∂–º–∏—Ç–µ F12 –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è ‚Ä¢ ESC –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è ‚Ä¢ Ctrl+C –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
            </div>
            <div>
              Telegram Mini App Debug Console
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};