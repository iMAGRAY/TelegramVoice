'use client';

import React, { useState } from 'react';
import { –ö–æ–º–Ω–∞—Ç–∞, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å } from '@/types';

interface RoomsListProps {
  –∫–æ–º–Ω–∞—Ç—ã: –ö–æ–º–Ω–∞—Ç–∞[];
  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å;
  –Ω–∞_–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ: (–∫–æ–º–Ω–∞—Ç–∞_id: string, –ø–∞—Ä–æ–ª—å?: string) => void;
  –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è: boolean;
}

export const SimpleRoomsList: React.FC<RoomsListProps> = ({
  –∫–æ–º–Ω–∞—Ç—ã,
  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å,
  –Ω–∞_–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ,
  –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è
}) => {

  if (–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="text-gray-600 dark:text-gray-300">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–Ω–∞—Ç...</div>
      </div>
    );
  }

  return (
    <div className="p-4 space-y-4">
      <h1 className="text-2xl font-bold text-gray-800 dark:text-white text-center">
        üé§ –ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–Ω–∞—Ç—ã
      </h1>

      <div className="bg-gradient-to-r from-blue-100 to-purple-100 dark:from-blue-900 dark:to-purple-900 p-4 rounded-lg">
        <div className="flex items-center space-x-3">
          <div className="text-2xl">{–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.–∞–≤–∞—Ç–∞—Ä || 'üë§'}</div>
          <div>
            <div className="font-medium text-gray-800 dark:text-white">
              –ü—Ä–∏–≤–µ—Ç, {–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.–∏–º—è}!
            </div>
            <div className="text-sm text-gray-600 dark:text-gray-300">
              –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –æ–±—â–µ–Ω–∏—è
            </div>
          </div>
        </div>
      </div>


      <div className="space-y-3">
        {–∫–æ–º–Ω–∞—Ç—ã.length === 0 ? (
          <div className="text-center py-8 text-gray-600 dark:text-gray-400">
            <div className="text-4xl mb-2">üè†</div>
            <div>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...</div>
            <div className="text-sm">–ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ</div>
          </div>
        ) : (
          –∫–æ–º–Ω–∞—Ç—ã.map(–∫–æ–º–Ω–∞—Ç–∞ => (
            <div
              key={–∫–æ–º–Ω–∞—Ç–∞.id}
              className="bg-white dark:bg-gray-800 p-4 rounded-lg border-2 border-gray-200 dark:border-gray-600 hover:border-blue-300 dark:hover:border-blue-500 transition-all cursor-pointer"
              onClick={() => –Ω–∞_–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ(–∫–æ–º–Ω–∞—Ç–∞.id)}
            >
              <div className="flex items-center justify-between">
                <div className="flex-1">
                  <div className="flex items-center space-x-2">
                    <h3 className="font-bold text-gray-800 dark:text-white">
                      {–∫–æ–º–Ω–∞—Ç–∞.–Ω–∞–∑–≤–∞–Ω–∏–µ}
                    </h3>
                    {–∫–æ–º–Ω–∞—Ç–∞.–ø—Ä–∏–≤–∞—Ç–Ω–∞—è && (
                      <span className="text-yellow-600 dark:text-yellow-400">üîí</span>
                    )}
                  </div>
                  
                  <div className="text-sm text-gray-600 dark:text-gray-300 mt-1">
                    üë• {–∫–æ–º–Ω–∞—Ç–∞.—É—á–∞—Å—Ç–Ω–∏–∫–∏.length} / {–∫–æ–º–Ω–∞—Ç–∞.–º–∞–∫—Å–∏–º—É–º_—É—á–∞—Å—Ç–Ω–∏–∫–æ–≤} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
                  </div>
                </div>
                
                <div className="text-right">
                  <div className="bg-blue-100 dark:bg-blue-900 text-blue-600 dark:text-blue-300 px-3 py-1 rounded-full text-sm">
                    üö™ –í–æ–π—Ç–∏
                  </div>
                </div>
              </div>
            </div>
          ))
        )}
      </div>
    </div>
  );
};