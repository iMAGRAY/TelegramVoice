#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è TelegramVoice —Å–∏—Å—Ç–µ–º—ã
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –≤—ã–≤–æ–¥–∏—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç

set -e

echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã TelegramVoice"
echo "=================================="
echo "‚è∞ $(date)"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_status() {
    if [ "$2" = "OK" ]; then
        echo "‚úÖ $1: OK"
    elif [ "$2" = "WARNING" ]; then
        echo "‚ö†Ô∏è  $1: WARNING"
    else
        echo "‚ùå $1: ERROR"
    fi
}

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:"
if pm2 list | grep -q "online"; then
    pm2 status
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    if pm2 list | grep "rust-websocket" | grep -q "online"; then
        print_status "Rust WebSocket —Å–µ—Ä–≤–µ—Ä" "OK"
    else
        print_status "Rust WebSocket —Å–µ—Ä–≤–µ—Ä" "ERROR"
    fi
    
    if pm2 list | grep "nextjs-static" | grep -q "online"; then
        print_status "Next.js —Å—Ç–∞—Ç–∏–∫ —Å–µ—Ä–≤–µ—Ä" "OK"
    else
        print_status "Next.js —Å—Ç–∞—Ç–∏–∫ —Å–µ—Ä–≤–µ—Ä" "ERROR"
    fi
else
    print_status "PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã" "ERROR"
fi

echo ""

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:"

# WebSocket –ø–æ—Ä—Ç 8080
if netstat -tlnp | grep :8080 > /dev/null; then
    print_status "WebSocket –ø–æ—Ä—Ç 8080" "OK"
    WS_PID=$(netstat -tlnp | grep :8080 | awk '{print $7}' | cut -d'/' -f1)
    echo "   ‚îî‚îÄ PID: $WS_PID"
else
    print_status "WebSocket –ø–æ—Ä—Ç 8080" "ERROR"
fi

# HTTP –ø–æ—Ä—Ç 3000
if netstat -tlnp | grep :3000 > /dev/null; then
    print_status "HTTP –ø–æ—Ä—Ç 3000" "OK"
    HTTP_PID=$(netstat -tlnp | grep :3000 | awk '{print $7}' | cut -d'/' -f1)
    echo "   ‚îî‚îÄ PID: $HTTP_PID"
else
    print_status "HTTP –ø–æ—Ä—Ç 3000" "ERROR"
fi

echo ""

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –æ—Ç–≤–µ—Ç–æ–≤
echo "üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –æ—Ç–≤–µ—Ç–æ–≤:"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000 || echo "000")
if [ "$HTTP_CODE" = "200" ]; then
    print_status "HTTP –æ—Ç–≤–µ—Ç (localhost:3000)" "OK"
    echo "   ‚îî‚îÄ HTTP –∫–æ–¥: $HTTP_CODE"
elif [ "$HTTP_CODE" = "404" ] || [ "$HTTP_CODE" = "500" ]; then
    print_status "HTTP –æ—Ç–≤–µ—Ç (localhost:3000)" "WARNING"
    echo "   ‚îî‚îÄ HTTP –∫–æ–¥: $HTTP_CODE (—Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã)"
else
    print_status "HTTP –æ—Ç–≤–µ—Ç (localhost:3000)" "ERROR"
    echo "   ‚îî‚îÄ HTTP –∫–æ–¥: $HTTP_CODE"
fi

echo ""

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"

# –ü–∞–º—è—Ç—å
MEMORY_USAGE=$(free | grep Mem | awk '{printf "%.1f", $3/$2 * 100.0}')
echo "   üß† RAM: ${MEMORY_USAGE}%"
if (( $(echo "$MEMORY_USAGE > 80" | bc -l) )); then
    print_status "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏" "WARNING"
else
    print_status "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏" "OK"
fi

# –î–∏—Å–∫
DISK_USAGE=$(df / | tail -1 | awk '{print $5}' | sed 's/%//')
echo "   üíø –î–∏—Å–∫: ${DISK_USAGE}%"
if [ "$DISK_USAGE" -gt 80 ]; then
    print_status "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞" "WARNING"
else
    print_status "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞" "OK"
fi

# CPU Load Average
LOAD_AVG=$(uptime | awk -F'load average:' '{print $2}' | awk '{print $1}' | sed 's/,//')
echo "   ‚ö° Load Average: $LOAD_AVG"

echo ""

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏
echo "üìù –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫):"

if pm2 logs --nostream --lines 20 | grep -i "error\|fail\|crash\|exception" > /dev/null; then
    print_status "–õ–æ–≥–∏" "WARNING"
    echo "   ‚îî‚îÄ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏:"
    pm2 logs --nostream --lines 10 | grep -i "error\|fail\|crash\|exception" | head -3
    echo "   ‚îî‚îÄ –ü–æ–ª–Ω—ã–µ –ª–æ–≥–∏: pm2 logs"
else
    print_status "–õ–æ–≥–∏" "OK"
    echo "   ‚îî‚îÄ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
fi

echo ""

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ uptime –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
echo "‚è±Ô∏è  –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:"
pm2 list | grep -E "(rust-websocket|nextjs-static)" | while read line; do
    PROCESS_NAME=$(echo "$line" | awk '{print $2}')
    UPTIME=$(echo "$line" | awk '{print $6}')
    echo "   ‚îî‚îÄ $PROCESS_NAME: $UPTIME"
done

echo ""

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ Git —Å—Ç–∞—Ç—É—Å–∞
echo "üîÑ Git —Å—Ç–∞—Ç—É—Å:"
cd /root/TelegramVoice
GIT_STATUS=$(git status --porcelain)
if [ -z "$GIT_STATUS" ]; then
    print_status "Git —Ä–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è" "OK"
    echo "   ‚îî‚îÄ –ß–∏—Å—Ç–∞—è —Ä–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è"
else
    print_status "Git —Ä–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è" "WARNING"
    echo "   ‚îî‚îÄ –ï—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è"
fi

CURRENT_COMMIT=$(git rev-parse --short HEAD)
echo "   ‚îî‚îÄ –¢–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç: $CURRENT_COMMIT"

echo ""

# 8. –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å
echo "üìä –û–ë–©–ò–ô –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´:"
echo "========================"

# –ü–æ–¥—Å—á–µ—Ç –ø—Ä–æ–±–ª–µ–º
ERRORS=0
WARNINGS=0

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
if ! pm2 list | grep "rust-websocket" | grep -q "online"; then
    ((ERRORS++))
fi

if ! pm2 list | grep "nextjs-static" | grep -q "online"; then
    ((ERRORS++))
fi

if ! netstat -tlnp | grep :8080 > /dev/null; then
    ((ERRORS++))
fi

if ! netstat -tlnp | grep :3000 > /dev/null; then
    ((ERRORS++))
fi

if [ "$HTTP_CODE" != "200" ] && [ "$HTTP_CODE" != "404" ]; then
    ((ERRORS++))
fi

if (( $(echo "$MEMORY_USAGE > 80" | bc -l) )); then
    ((WARNINGS++))
fi

if [ "$DISK_USAGE" -gt 80 ]; then
    ((WARNINGS++))
fi

if pm2 logs --nostream --lines 20 | grep -i "error\|fail\|crash" > /dev/null; then
    ((WARNINGS++))
fi

# –í—ã–≤–æ–¥ –æ–±—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
if [ "$ERRORS" -eq 0 ] && [ "$WARNINGS" -eq 0 ]; then
    echo "üü¢ –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –ù–û–†–ú–ê–õ–¨–ù–û"
elif [ "$ERRORS" -eq 0 ]; then
    echo "üü° –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ (–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: $WARNINGS)"
else
    echo "üî¥ –°–ò–°–¢–ï–ú–ê –ò–ú–ï–ï–¢ –ü–†–û–ë–õ–ï–ú–´ (–æ—à–∏–±–∫–∏: $ERRORS, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: $WARNINGS)"
fi

echo ""
echo "üîß –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:"
echo "   pm2 logs     - –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
echo "   pm2 monit    - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
echo "   pm2 restart all - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"