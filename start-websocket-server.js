#!/usr/bin/env node

const { spawn } = require('child_process');
const WebSocket = require('ws');

console.log('üöÄ –ó–∞–ø—É—Å–∫ WebSocket —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');

// –ó–∞–ø—É—Å–∫–∞–µ–º WebSocket —Å–µ—Ä–≤–µ—Ä
const serverProcess = spawn('npm', ['run', 'dev'], {
  cwd: './websocket-server',
  shell: true,
  stdio: 'pipe'
});

let serverReady = false;

serverProcess.stdout.on('data', (data) => {
  const output = data.toString();
  console.log('[WebSocket Server]', output.trim());
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
  if (output.includes('WebSocket —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080')) {
    serverReady = true;
    console.log('‚úÖ WebSocket —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!');
    
    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    setTimeout(() => {
      console.log('\nüß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...\n');
      
      const testProcess = spawn('node', ['test-virtual-users.js'], {
        stdio: 'inherit'
      });
      
      testProcess.on('close', (code) => {
        console.log(`\nüèÅ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —Å –∫–æ–¥–æ–º: ${code}`);
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º WebSocket —Å–µ—Ä–≤–µ—Ä
        console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ WebSocket —Å–µ—Ä–≤–µ—Ä–∞...');
        serverProcess.kill('SIGINT');
        
        setTimeout(() => {
          process.exit(code);
        }, 1000);
      });
      
    }, 2000);
  }
});

serverProcess.stderr.on('data', (data) => {
  console.error('[WebSocket Server Error]', data.toString().trim());
});

serverProcess.on('close', (code) => {
  console.log(`WebSocket —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å –∫–æ–¥–æ–º: ${code}`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGINT', () => {
  console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...');
  serverProcess.kill('SIGINT');
  process.exit(0);
});

// –¢–∞–π–º–∞—É—Ç –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
setTimeout(() => {
  if (!serverReady) {
    console.error('‚ùå –¢–∞–π–º–∞—É—Ç –∑–∞–ø—É—Å–∫–∞ WebSocket —Å–µ—Ä–≤–µ—Ä–∞');
    serverProcess.kill('SIGINT');
    process.exit(1);
  }
}, 10000);