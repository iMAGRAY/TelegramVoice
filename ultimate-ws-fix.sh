#!/bin/bash
# –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ WebSocket —Å–µ—Ä–≤–µ—Ä–∞
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ

echo "üöÄ ULTIMATE WEBSOCKET FIX"
echo "========================"
echo "–í—Ä–µ–º—è: $(date)"
echo

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–∞
check_port() {
    timeout 2 bash -c "cat < /dev/tcp/localhost/8080" &>/dev/null
    return $?
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏
cleanup() {
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
    
    # PM2 - —É–¥–∞–ª—è–µ–º –í–°–ï –ø—Ä–æ—Ü–µ—Å—Å—ã
    pm2 delete all 2>/dev/null || true
    pm2 kill 2>/dev/null || true
    
    # Systemd
    systemctl stop telegramvoice-ws 2>/dev/null || true
    systemctl stop telegramvoice-backup-ws 2>/dev/null || true
    
    # –ü—Ä–æ—Ü–µ—Å—Å—ã –ø–æ PID —Ñ–∞–π–ª–∞–º
    [ -f /tmp/ws.pid ] && kill -9 $(cat /tmp/ws.pid) 2>/dev/null || true
    [ -f /tmp/backup-ws.pid ] && kill -9 $(cat /tmp/backup-ws.pid) 2>/dev/null || true
    
    # –ê–ì–†–ï–°–°–ò–í–ù–ê–Ø –æ—á–∏—Å—Ç–∫–∞ –ø–æ—Ä—Ç–∞ 8080
    echo "–û—á–∏—Å—Ç–∫–∞ –ø–æ—Ä—Ç–∞ 8080..."
    # lsof
    lsof -ti:8080 | xargs kill -9 2>/dev/null || true
    sleep 1
    # fuser
    fuser -k 8080/tcp 2>/dev/null || true
    sleep 1
    # ss –≤–º–µ—Å—Ç–æ netstat
    ss -lptn 'sport = :8080' | grep -oP '(?<=pid=)\d+' | xargs kill -9 2>/dev/null || true
    sleep 1
    # –£–±–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã signaling-server –∏ node
    pkill -9 -f signaling-server 2>/dev/null || true
    pkill -9 -f "node.*backup-ws-server" 2>/dev/null || true
    pkill -9 -f "node.*8080" 2>/dev/null || true
    
    sleep 3
}

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p /root/TelegramVoice/logs

# 1. –ú–ï–¢–û–î: –ü—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ Rust —Å–µ—Ä–≤–µ—Ä–∞
try_direct_rust() {
    echo "1Ô∏è‚É£ –ü–æ–ø—ã—Ç–∫–∞: –ø—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ Rust —Å–µ—Ä–≤–µ—Ä–∞..."
    
    if [ -f "/root/TelegramVoice/signaling-server/target/release/signaling-server" ]; then
        cd /root/TelegramVoice/signaling-server
        export RUST_LOG=info
        nohup ./target/release/signaling-server > /root/TelegramVoice/logs/direct-rust.log 2>&1 &
        echo $! > /tmp/ws.pid
        sleep 3
        
        if check_port; then
            echo "‚úÖ Rust —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ nohup!"
            return 0
        else
            echo "‚ùå Rust —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
            cat /root/TelegramVoice/logs/direct-rust.log | tail -20
        fi
    else
        echo "‚ùå –ë–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª Rust –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    return 1
}

# 2. –ú–ï–¢–û–î: PM2 —Å Rust
try_pm2_rust() {
    echo "2Ô∏è‚É£ –ü–æ–ø—ã—Ç–∫–∞: PM2 —Å Rust —Å–µ—Ä–≤–µ—Ä–æ–º..."
    
    cd /root/TelegramVoice
    cat > ws-runner.sh << 'EOF'
#!/bin/bash
cd /root/TelegramVoice/signaling-server
export RUST_LOG=info
exec ./target/release/signaling-server
EOF
    chmod +x ws-runner.sh
    
    pm2 start ws-runner.sh --name signaling-server --log /root/TelegramVoice/logs/pm2-rust.log
    sleep 3
    
    if check_port; then
        echo "‚úÖ Rust —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ PM2!"
        pm2 save
        return 0
    else
        echo "‚ùå PM2 –Ω–µ —Å–º–æ–≥ –∑–∞–ø—É—Å—Ç–∏—Ç—å Rust —Å–µ—Ä–≤–µ—Ä"
        pm2 logs signaling-server --lines 20 --nostream
    fi
    return 1
}

# 3. –ú–ï–¢–û–î: Systemd —Å–µ—Ä–≤–∏—Å
try_systemd() {
    echo "3Ô∏è‚É£ –ü–æ–ø—ã—Ç–∫–∞: Systemd —Å–µ—Ä–≤–∏—Å..."
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -f /etc/systemd/system/telegramvoice-ws.service ]; then
        cd /root/TelegramVoice
        chmod +x setup-systemd.sh
        ./setup-systemd.sh
    fi
    
    systemctl start telegramvoice-ws
    sleep 3
    
    if check_port; then
        echo "‚úÖ Rust —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ systemd!"
        systemctl enable telegramvoice-ws
        return 0
    else
        echo "‚ùå Systemd –Ω–µ —Å–º–æ–≥ –∑–∞–ø—É—Å—Ç–∏—Ç—å Rust —Å–µ—Ä–≤–µ—Ä"
        systemctl status telegramvoice-ws --no-pager | tail -20
    fi
    return 1
}

# 4. –ú–ï–¢–û–î: Node.js —Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ PM2
try_nodejs_backup() {
    echo "4Ô∏è‚É£ –ü–æ–ø—ã—Ç–∫–∞: Node.js —Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Å–µ—Ä–≤–µ—Ä..."
    
    cd /root/TelegramVoice
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if [ ! -d "node_modules/ws" ]; then
        echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ ws –º–æ–¥—É–ª—è..."
        npm install ws
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ backup-ws-server.js
    if [ ! -f "backup-ws-server.js" ]; then
        echo "‚ùå backup-ws-server.js –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        return 1
    fi
    
    pm2 start backup-ws-server.js --name backup-ws --log /root/TelegramVoice/logs/pm2-backup.log
    sleep 3
    
    if check_port; then
        echo "‚úÖ Node.js —Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!"
        pm2 save
        return 0
    else
        echo "‚ùå Node.js —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
        pm2 logs backup-ws --lines 20 --nostream
    fi
    return 1
}

# 5. –ú–ï–¢–û–î: –ü—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ Node.js
try_direct_nodejs() {
    echo "5Ô∏è‚É£ –ü–æ–ø—ã—Ç–∫–∞: –ø—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ Node.js —Å–µ—Ä–≤–µ—Ä–∞..."
    
    cd /root/TelegramVoice
    nohup node backup-ws-server.js > /root/TelegramVoice/logs/direct-nodejs.log 2>&1 &
    echo $! > /tmp/backup-ws.pid
    sleep 3
    
    if check_port; then
        echo "‚úÖ Node.js —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ nohup!"
        return 0
    else
        echo "‚ùå Node.js —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
        cat /root/TelegramVoice/logs/direct-nodejs.log | tail -20
    fi
    return 1
}

# –ì–õ–ê–í–ù–ê–Ø –õ–û–ì–ò–ö–ê
echo "üîç –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤:"
ss -tlnp | grep 8080 || echo "–ü–æ—Ä—Ç 8080 —Å–≤–æ–±–æ–¥–µ–Ω"
echo
echo "–ü—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 8080:"
lsof -i:8080 2>/dev/null || echo "–ù–∏–∫—Ç–æ –Ω–µ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 8080"
echo

# –û—á–∏—Å—Ç–∫–∞
cleanup

# –ü—Ä–æ–±—É–µ–º –≤—Å–µ –º–µ—Ç–æ–¥—ã –ø–æ –ø–æ—Ä—è–¥–∫—É
if try_direct_rust; then
    echo "üéâ –£—Å–ø–µ—Ö —Å –º–µ—Ç–æ–¥–æ–º 1!"
elif try_pm2_rust; then
    echo "üéâ –£—Å–ø–µ—Ö —Å –º–µ—Ç–æ–¥–æ–º 2!"
elif try_systemd; then
    echo "üéâ –£—Å–ø–µ—Ö —Å –º–µ—Ç–æ–¥–æ–º 3!"
elif try_nodejs_backup; then
    echo "üéâ –£—Å–ø–µ—Ö —Å –º–µ—Ç–æ–¥–æ–º 4!"
elif try_direct_nodejs; then
    echo "üéâ –£—Å–ø–µ—Ö —Å –º–µ—Ç–æ–¥–æ–º 5!"
else
    echo "‚ùå –í–°–ï –ú–ï–¢–û–î–´ –ù–ï –°–†–ê–ë–û–¢–ê–õ–ò!"
    echo
    echo "üìã –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
    echo "================================"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    echo "–§–∞–π–ª—ã:"
    ls -la /root/TelegramVoice/signaling-server/target/release/signaling-server 2>/dev/null || echo "- Rust –±–∏–Ω–∞—Ä–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    ls -la /root/TelegramVoice/backup-ws-server.js 2>/dev/null || echo "- Node.js backup –Ω–µ –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
    echo
    echo "–ü–æ—Ä—Ç—ã:"
    ss -tlnp | grep 8080 || echo "- –ü–æ—Ä—Ç 8080 –Ω–∏–∫—Ç–æ –Ω–µ —Å–ª—É—à–∞–µ—Ç (ss)"
    lsof -i:8080 2>/dev/null || echo "- –ü–æ—Ä—Ç 8080 –Ω–∏–∫—Ç–æ –Ω–µ —Å–ª—É—à–∞–µ—Ç (lsof)"
    
    # PM2 —Å—Ç–∞—Ç—É—Å
    echo
    echo "PM2:"
    pm2 list
    
    exit 1
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo
echo "üìä –§–ò–ù–ê–õ–¨–ù–´–ô –°–¢–ê–¢–£–°:"
echo "==================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞
if check_port; then
    echo "‚úÖ WebSocket —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080"
    
    # –ö—Ç–æ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç
    echo
    echo "–ü—Ä–æ—Ü–µ—Å—Å –Ω–∞ –ø–æ—Ä—Ç—É 8080:"
    lsof -i:8080
    
    # –°—Ç–∞—Ç—É—Å PM2
    echo
    echo "PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã:"
    pm2 list
    
    # –°—Ç–∞—Ç—É—Å systemd
    echo
    echo "Systemd —Å–µ—Ä–≤–∏—Å—ã:"
    systemctl is-active telegramvoice-ws 2>/dev/null && echo "telegramvoice-ws: active" || echo "telegramvoice-ws: inactive"
    systemctl is-active telegramvoice-backup-ws 2>/dev/null && echo "telegramvoice-backup-ws: active" || echo "telegramvoice-backup-ws: inactive"
else
    echo "‚ùå WebSocket —Å–µ—Ä–≤–µ—Ä –ù–ï –î–û–°–¢–£–ü–ï–ù!"
    exit 1
fi

echo
echo "üéØ WebSocket —Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"