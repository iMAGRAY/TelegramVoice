#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å—Ç–∞—Ç—É—Å–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
# –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
STATUS_FILE="/tmp/telegram_voice_status.log"
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    local errors=0
    local warnings=0
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    if ! pm2 list | grep "websocket-server" | grep -q "online"; then
        ((errors++))
    fi
    
    if ! pm2 list | grep "frontend" | grep -q "online"; then
        ((errors++))
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
    if ! netstat -tlnp | grep :8080 > /dev/null; then
        ((errors++))
    fi
    
    if ! netstat -tlnp | grep :3000 > /dev/null; then
        ((errors++))
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –æ—Ç–≤–µ—Ç–∞
    HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" --max-time 5 http://localhost:3000 || echo "000")
    if [ "$HTTP_CODE" != "200" ] && [ "$HTTP_CODE" != "404" ]; then
        ((errors++))
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
    MEMORY_USAGE=$(free | grep Mem | awk '{printf "%.0f", $3/$2 * 100.0}')
    if [ "$MEMORY_USAGE" -gt 80 ]; then
        ((warnings++))
    fi
    
    DISK_USAGE=$(df / | tail -1 | awk '{print $5}' | sed 's/%//')
    if [ "$DISK_USAGE" -gt 80 ]; then
        ((warnings++))
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
    if pm2 logs --nostream --lines 10 | grep -i "error\|fail\|crash" > /dev/null; then
        ((warnings++))
    fi
    
    echo "$errors:$warnings"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
send_notification() {
    local deploy_status="$1"
    local commit_hash=$(git rev-parse --short HEAD)
    local status_check=$(check_status)
    local errors=$(echo "$status_check" | cut -d':' -f1)
    local warnings=$(echo "$status_check" | cut -d':' -f2)
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
    if [ "$errors" -eq 0 ] && [ "$warnings" -eq 0 ]; then
        OVERALL_STATUS="üü¢ –£–°–ü–ï–®–ù–û"
        STATUS_ICON="‚úÖ"
    elif [ "$errors" -eq 0 ]; then
        OVERALL_STATUS="üü° –° –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø–ú–ò ($warnings)"
        STATUS_ICON="‚ö†Ô∏è"
    else
        OVERALL_STATUS="üî¥ –ï–°–¢–¨ –û–®–ò–ë–ö–ò ($errors –æ—à–∏–±–æ–∫, $warnings –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π)"
        STATUS_ICON="‚ùå"
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
    cat > "$STATUS_FILE" << EOF
$STATUS_ICON TELEGRAM VOICE DEPLOY REPORT
========================================
‚è∞ –í—Ä–µ–º—è: $TIMESTAMP
üîÑ –ö–æ–º–º–∏—Ç: $commit_hash
üìä –°—Ç–∞—Ç—É—Å: $OVERALL_STATUS

üîß –°–ï–†–í–ò–°–´:
$(pm2 list | grep -E "(websocket-server|frontend)" | awk '{print "   "$2": "$10}')

üåê –ü–û–†–¢–´:
   ‚Ä¢ WebSocket (8080): $(netstat -tlnp | grep :8080 > /dev/null && echo "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
   ‚Ä¢ HTTP (3000): $(netstat -tlnp | grep :3000 > /dev/null && echo "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç" || echo "‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")

üíæ –†–ï–°–£–†–°–´:
   ‚Ä¢ RAM: ${MEMORY_USAGE}%
   ‚Ä¢ –î–∏—Å–∫: ${DISK_USAGE}%
   ‚Ä¢ Load: $(uptime | awk -F'load average:' '{print $2}' | awk '{print $1}')

üåç –î–û–°–¢–£–ü–ù–û–°–¢–¨:
   ‚Ä¢ HTTP –∫–æ–¥: $HTTP_CODE
   ‚Ä¢ –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø: $(curl -s --max-time 3 http://89.23.115.156:3000 > /dev/null && echo "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω" || echo "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω")

üìù –ü–û–°–õ–ï–î–ù–ò–ï –õ–û–ì–ò:
$(pm2 logs --nostream --lines 3 2>/dev/null | head -3 || echo "–õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")

========================================
EOF
    
    # –í—ã–≤–æ–¥ –æ—Ç—á–µ—Ç–∞
    cat "$STATUS_FILE"
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
    echo "[$TIMESTAMP] Deploy: $OVERALL_STATUS" >> /root/TelegramVoice/logs/deploy-history.log
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Ç–∫–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
quick_status() {
    local status_check=$(check_status)
    local errors=$(echo "$status_check" | cut -d':' -f1)
    local warnings=$(echo "$status_check" | cut -d':' -f2)
    
    if [ "$errors" -eq 0 ] && [ "$warnings" -eq 0 ]; then
        echo "üü¢ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
    elif [ "$errors" -eq 0 ]; then
        echo "üü° –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏ ($warnings)"
    else
        echo "üî¥ –°–∏—Å—Ç–µ–º–∞ –∏–º–µ–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã ($errors –æ—à–∏–±–æ–∫)"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-full}" in
    "quick")
        quick_status
        ;;
    "full"|*)
        send_notification "${2:-manual}"
        ;;
esac