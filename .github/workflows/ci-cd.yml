name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout –∫–æ–¥–∞
      uses: actions/checkout@v4
    
    - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mini-app/package-lock.json
    
    - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
      run: |
        cd mini-app
        npm ci
    
    - name: –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
      run: |
        cd mini-app
        npm run build
    
    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ Rust –∫–æ–¥–∞
      run: |
        cd signaling-server
        cargo check
    
    - name: –°–±–æ—Ä–∫–∞ Rust –ø—Ä–æ–µ–∫—Ç–∞
      run: |
        cd signaling-server
        cargo build --release

  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è main –≤–µ—Ç–∫–∏)
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: Checkout –∫–æ–¥–∞
      uses: actions/checkout@v4
      
    - name: –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          cd ${{ secrets.SERVER_PROJECT_PATH || '/root/TelegramVoice' }}
          git pull origin main
          chmod +x deploy.sh
          ./deploy.sh
          
    - name: –ü–æ—Å—Ç-—Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          cd ${{ secrets.SERVER_PROJECT_PATH || '/root/TelegramVoice' }}
          echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—Å–ª–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è..."
          chmod +x monitor.sh
          ./monitor.sh
          
    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ –∏–∑ –≤–Ω–µ—à–Ω–µ–π —Å–µ—Ç–∏..."
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ WebSocket —Å–µ—Ä–≤–µ—Ä–∞
          if curl -s --max-time 5 telnet://${{ secrets.SERVER_HOST }}:8080 > /dev/null; then
            echo "‚úÖ WebSocket —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑–≤–Ω–µ"
          else
            echo "‚ùå WebSocket —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑–≤–Ω–µ"
            exit 1
          fi
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP —Å–µ—Ä–≤–µ—Ä–∞
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" --max-time 10 http://${{ secrets.SERVER_HOST }}:3000 || echo "000")
          if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "404" ]; then
            echo "‚úÖ HTTP —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑–≤–Ω–µ (–∫–æ–¥: $HTTP_CODE)"
          else
            echo "‚ùå HTTP —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑–≤–Ω–µ (–∫–æ–¥: $HTTP_CODE)"
            exit 1
          fi
          
          echo "üéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã –∏ –¥–æ—Å—Ç—É–ø–Ω—ã!"