#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤..."
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
echo "üìä PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã:"
pm2 status

echo
echo "üìã PM2 –ª–æ–≥–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫):"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
if pm2 list | grep -q "frontend"; then
    echo "--- Frontend logs ---"
    pm2 logs frontend --lines 20 --nostream
else
    echo "--- NextJS Static logs (—Å—Ç–∞—Ä–æ–µ –∏–º—è) ---"
    pm2 logs nextjs-static --lines 20 --nostream 2>/dev/null || echo "Frontend –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo
if pm2 list | grep -q "signaling-server"; then
    echo "--- Signaling Server logs ---"
    pm2 logs signaling-server --lines 20 --nostream
else
    echo "--- Rust WebSocket logs (—Å—Ç–∞—Ä–æ–µ –∏–º—è) ---"
    pm2 logs rust-websocket --lines 20 --nostream 2>/dev/null || echo "Signaling server –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:"
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 3000 (Next.js)
if lsof -i:3000 >/dev/null 2>&1; then
    echo "‚úÖ –ü–æ—Ä—Ç 3000 (Next.js) –∞–∫—Ç–∏–≤–µ–Ω"
    lsof -i:3000 | grep LISTEN
else
    echo "‚ùå –ü–æ—Ä—Ç 3000 (Next.js) –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 8080 (WebSocket)
if lsof -i:8080 >/dev/null 2>&1; then
    echo "‚úÖ –ü–æ—Ä—Ç 8080 (WebSocket) –∞–∫—Ç–∏–≤–µ–Ω"
    lsof -i:8080 | grep LISTEN
else
    echo "‚ùå –ü–æ—Ä—Ç 8080 (WebSocket) –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo
echo "üîß –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã:"
ps aux | grep -E "(node|cargo|signaling)" | grep -v grep

echo
echo "üöÄ –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
pm2 restart ecosystem.config.js

echo
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ (10 —Å–µ–∫—É–Ω–¥)..."
sleep 10

echo
echo "üìä –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:"
pm2 status

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ curl
echo
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:"

# WebSocket
if timeout 5 bash -c "cat < /dev/tcp/localhost/8080" &>/dev/null; then
    echo "‚úÖ WebSocket —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ"
else
    echo "‚ùå WebSocket —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ"
fi

# HTTP
HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" --max-time 10 http://localhost:3000 || echo "000")
if [[ "$HTTP_CODE" == "200" || "$HTTP_CODE" == "404" ]]; then
    echo "‚úÖ HTTP —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ (–∫–æ–¥ $HTTP_CODE)"
else
    echo "‚ùå HTTP —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ (–∫–æ–¥ $HTTP_CODE)"
fi